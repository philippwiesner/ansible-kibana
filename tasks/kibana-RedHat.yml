---
- name: Ensure libselinux-python on CentOS 6.x
  become: yes
  yum:
    name: libselinux-python
    state: present
    update_cache: yes
  when: ansible_distribution is match("CentOS") and ansible_distribution_major_version is match("6")
  register: result
  until: result is not failed
  retries: 5
  delay: 10
  vars:
    ansible_python_interpreter: "{{ python2_interpreter }}"

- name: RedHat - Check if repo exists
  stat:
    path: "/etc/yum.repos.d/elasticsearch-{{ es_repo_name_inverted }}.repo"
  register: stat_repo

- name: RedHat - remove Elasticsearch repo if exists
  become: yes
  file:
    path: "/etc/yum.repos.d/elasticsearch-{{ es_repo_name_inverted }}.repo"
    state: absent
  when: stat_repo.stat.exists

- name: RedHat - add Elasticsearch repo
  become: yes
  template:
    src: elasticsearch.repo
    dest: "/etc/yum.repos.d/elasticsearch-{{ es_repo_name }}.repo"
  when: es_use_repository | bool

- name: RedHat - include versionlock
  include: kibana-RedHat-version-lock.yml
  when: kibana_version_lock | bool

- name: Gracefully stop and remove kibana if we are switching version.
  block:
    - name: RedHat - Check if other package is installed
      package_facts:
        manager: "auto"

    - name: RedHat - stop {{ kibana_inverted_package_name }}
      become: yes
      service:
        name: '{{ instance_init_script | basename }}'
        state: stopped
      when: kibana_inverted_package_name in ansible_facts.packages

    - name: RedHat - remove {{ kibana_inverted_package_name }}
      become: yes
      yum:
        name: "{{ kibana_inverted_package_name }}"
        state: absent
      when: kibana_inverted_package_name in ansible_facts.packages
      vars:
        ansible_python_interpreter: "{{ python2_interpreter }}"

- name: RedHat - Install kibana
  become: yes
  yum:
    name: '{{ kibana_package_name }}{% if es_version is defined and es_version %}-{{ es_version }}{% endif %}'
    state: present
    update_cache: yes
  when: es_use_repository | bool
  notify: restart kibana
  register: result
  until: result is not failed
  retries: 5
  delay: 10
  vars:
    ansible_python_interpreter: "{{ python2_interpreter }}"

- name: RedHat - Install Kibana from url
  become: yes
  yum:
    name: >
      {% if kibana_custom_package_url is defined %}{{ kibana_custom_package_url }}
      {% else %}{{ kibana_package_url }}-{{ es_version }}-x86_64.rpm{% endif %}
    state: present
  when: not es_use_repository
  register: kibana_install_from_package
  notify: restart kibana
  until: kibana_install_from_package is not failed
  retries: 5
  delay: 10
  vars:
    ansible_python_interpreter: "{{ python2_interpreter }}"
